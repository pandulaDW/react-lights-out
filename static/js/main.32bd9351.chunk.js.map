{"version":3,"sources":["components/box/box.component.jsx","components/boxgrid/boxgrid.component.jsx","App.js","index.js"],"names":["Box","className","this","props","status","onClick","handleClick","React","Component","BoxGrid","rows","columns","classNameList","classes","i","j","push","makeInitialState","states","reduce","obj","cur","Math","floor","random","event","target","split","slice","clickedClass","currentStatus","map","el","parseInt","rowNum","colNum","new_obj","neighbours","forEach","includes","element","newStatus","state","setState","style","gridTemplateColumns","gridTemplateRows","Object","keys","key","uuid","App","ReactDOM","render","document","getElementById"],"mappings":"iUAeeA,G,6LATX,OACE,yBACEC,UAAS,cAASC,KAAKC,MAAMF,UAApB,YAAiCC,KAAKC,MAAMC,QACrDC,QAASH,KAAKC,MAAMG,kB,GALVC,IAAMC,YCuFTC,E,YApFb,WAAYN,GAAQ,IAAD,8BACjB,4CAAMA,KAIRO,KAAO,EALY,EAMnBC,QAAU,EANS,EAQnBC,cAAgB,SAACF,EAAMC,GAErB,IADA,IAAIE,EAAU,GACLC,EAAI,EAAGA,EAAIJ,EAAO,EAAGI,IAC5B,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAU,EAAGI,IAAKF,EAAQG,KAAR,cAAoBF,EAApB,YAAyBC,IAEjE,OAAOF,GAbU,EAgBnBI,iBAAmB,WACjB,IAAMJ,EAAU,EAAKD,cAAc,EAAKF,KAAM,EAAKC,SAC7CO,EAAS,CAAC,SAAU,YAC1B,OAAOL,EAAQM,QACb,SAACC,EAAKC,GAAN,OAEGD,EAAIC,GAAOH,EAAOI,KAAKC,MAAsB,EAAhBD,KAAKE,WAAiBJ,IAEtD,KAxBe,EA4BnBd,YAAc,SAAAmB,GAAU,IAAD,EACiBA,EAAMC,OAAOzB,UAChD0B,MAAM,KACNC,MAAM,GAHY,mBACdC,EADc,KACAC,EADA,OAIID,EACtBF,MAAM,KACNC,MAAM,GACNG,KAAI,SAAAC,GAAE,OAAIC,SAASD,MAPD,mBAIdE,EAJc,KAINC,EAJM,KASjBC,EAAU,GACVC,EAAa,GAEjBD,EAAQ,OAAD,OAAQF,EAAR,YAAkBC,IACL,WAAlBL,EAA6B,WAAa,SAE5CO,EAAW,GAAK,CAACH,EAAS,EAAI,EAAKxB,KAAO,KAAOwB,EAAS,EAAGC,GAC7DE,EAAW,GAAK,CAACH,EAAS,EAAI,EAAI,KAAOA,EAAS,EAAGC,GACrDE,EAAW,GAAK,CAACH,EAAQC,EAAS,EAAI,EAAKxB,QAAU,KAAOwB,EAAS,GACrEE,EAAW,GAAK,CAACH,EAAQC,EAAS,EAAI,EAAI,KAAOA,EAAS,GAE1DE,EAAWC,SAAQ,SAAAN,GACjB,IAAKA,EAAGO,SAAS,MAAO,CACtB,IAAMC,EAAO,cAAUR,EAAG,GAAb,YAAmBA,EAAG,IAE7BS,EAA8B,WADd,EAAKC,MAAMF,GACc,WAAa,SAC5DJ,EAAQI,GAAWC,MAIvB,EAAKE,SAASP,IAvDd,EAAKM,MAAQ,EAAKzB,mBAFD,E,sEA4DT,IAAD,OACP,OACE,yBAAKhB,UAAU,WACb,yBACEA,UAAU,YACV2C,MAAO,CACLC,oBAAoB,UAAD,OAAY3C,KAAKS,QAAjB,YACnBmC,iBAAiB,UAAD,OAAY5C,KAAKQ,KAAjB,aAGjBqC,OAAOC,KAAK9C,KAAKwC,OAAOX,KAAI,SAAAC,GAAE,OAC7B,kBAAC,EAAD,CACEiB,IAAKC,MACLjD,UAAW+B,EACX5B,OAAQ,EAAKsC,MAAMV,GACnB1B,YAAa,EAAKA,uB,GA5EVC,IAAMC,WCSb2C,MAXf,WACE,OACE,yBAAKlD,UAAU,OACb,wBAAIA,UAAU,SAAd,UACS,sCAET,kBAAC,EAAD,QCLNmD,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.32bd9351.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./box.styles.scss\";\r\n\r\nclass Box extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className={`Box ${this.props.className} ${this.props.status}`}\r\n        onClick={this.props.handleClick}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Box;\r\n","import React from \"react\";\r\nimport uuid from \"uuid\";\r\n\r\nimport \"./boxgrid.styles.scss\";\r\nimport Box from \"../box/box.component\";\r\n\r\nclass BoxGrid extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.makeInitialState();\r\n  }\r\n\r\n  rows = 6;\r\n  columns = 6;\r\n\r\n  classNameList = (rows, columns) => {\r\n    let classes = [];\r\n    for (let i = 1; i < rows + 1; i++) {\r\n      for (let j = 1; j < columns + 1; j++) classes.push(`box-${i}-${j}`);\r\n    }\r\n    return classes;\r\n  };\r\n\r\n  makeInitialState = () => {\r\n    const classes = this.classNameList(this.rows, this.columns);\r\n    const states = [\"active\", \"inactive\"];\r\n    return classes.reduce(\r\n      (obj, cur) => (\r\n        // eslint-disable-next-line no-sequences\r\n        (obj[cur] = states[Math.floor(Math.random() * 2)]), obj\r\n      ),\r\n      {}\r\n    );\r\n  };\r\n\r\n  handleClick = event => {\r\n    const [clickedClass, currentStatus] = event.target.className\r\n      .split(\" \")\r\n      .slice(1);\r\n    const [rowNum, colNum] = clickedClass\r\n      .split(\"-\")\r\n      .slice(1)\r\n      .map(el => parseInt(el));\r\n\r\n    let new_obj = {};\r\n    let neighbours = [];\r\n\r\n    new_obj[`box-${rowNum}-${colNum}`] =\r\n      currentStatus === \"active\" ? \"inactive\" : \"active\";\r\n\r\n    neighbours[0] = [rowNum + 1 > this.rows ? null : rowNum + 1, colNum];\r\n    neighbours[1] = [rowNum - 1 < 1 ? null : rowNum - 1, colNum];\r\n    neighbours[2] = [rowNum, colNum + 1 > this.columns ? null : colNum + 1];\r\n    neighbours[3] = [rowNum, colNum - 1 < 1 ? null : colNum - 1];\r\n\r\n    neighbours.forEach(el => {\r\n      if (!el.includes(null)) {\r\n        const element = `box-${el[0]}-${el[1]}`;\r\n        const currentStatus = this.state[element];\r\n        const newStatus = currentStatus === \"active\" ? \"inactive\" : \"active\";\r\n        new_obj[element] = newStatus;\r\n      }\r\n    });\r\n\r\n    this.setState(new_obj);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"BoxGrid\">\r\n        <div\r\n          className=\"container\"\r\n          style={{\r\n            gridTemplateColumns: `repeat(${this.columns}, 100px)`,\r\n            gridTemplateRows: `repeat(${this.rows}, 80px)`\r\n          }}\r\n        >\r\n          {Object.keys(this.state).map(el => (\r\n            <Box\r\n              key={uuid()}\r\n              className={el}\r\n              status={this.state[el]}\r\n              handleClick={this.handleClick}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BoxGrid;\r\n","import React from \"react\";\n\nimport BoxGrid from \"./components/boxgrid/boxgrid.component\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">\n        Lights <span>Out</span>\n      </h1>\n      <BoxGrid />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}